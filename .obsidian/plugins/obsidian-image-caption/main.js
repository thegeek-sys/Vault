/*
THIS FILE WAS GENERATED AUTOMATICALLY.
You can view the source at https://github.com/bicarlsen/obsidian_image_caption.
*/
var S=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var M=Object.prototype.hasOwnProperty;var A=(i,n)=>{for(var e in n)S(i,e,{get:n[e],enumerable:!0})},L=(i,n,e,t)=>{if(n&&typeof n=="object"||typeof n=="function")for(let s of D(n))!M.call(i,s)&&s!==e&&S(i,s,{get:()=>n[s],enumerable:!(t=O(n,s))||t.enumerable});return i};var $=i=>L(S({},"__esModule",{value:!0}),i);var g=(i,n,e)=>new Promise((t,s)=>{var r=l=>{try{a(e.next(l))}catch(c){s(c)}},o=l=>{try{a(e.throw(l))}catch(c){s(c)}},a=l=>l.done?t(l.value):Promise.resolve(l.value).then(r,o);a((e=e.apply(i,n)).next())});var Q={};A(Q,{default:()=>d});module.exports=$(Q);var p=require("obsidian");var h=require("@codemirror/view");var v=require("obsidian");function w(i,n,e){let t=e<0,s=t?i.previousElementSibling:i.nextElementSibling;for(;s&&!s.matches(n);)s=t?s.previousElementSibling:s.nextElementSibling;return s}function E(i,n){if(!i)return null;let e,t,s,r;if(n.length===0)s="",r="",e=0,t=i.length;else if(n.length===1)s=n[0],r=n[0],e=i.indexOf(s),t=i.lastIndexOf(r);else if(n.length===2)s=n[0],r=n[1],e=i.indexOf(s),t=i.lastIndexOf(r);else return{text:void 0,size:void 0};let o,a;if(e===-1||t===-1||e===t)o=void 0,a=[i];else{let c=s.length,f=r.length;o=i.slice(e+c,t),a=[i.slice(0,e),i.slice(t+f)]}let l=y(a[0]);return!l&&a[1]&&(l=y(a[1])),{text:o,size:l}}function y(i){if(!i)return;let n=/(\d+|auto)x(\d+|auto)/i,e=i.match(n);if(!e)return;let t=parseInt(e[1]),s=parseInt(e[2]);return{width:t,height:s}}function I(i,n,e=!1){let t=document.createElement(d.caption_tag);return t.addClass(d.caption_class),e?t.innerHTML=n:t.innerText=n,i.appendChild(t),getComputedStyle(i).getPropertyValue("display")=="inline"&&(i.style.display="inline-block"),i.addClass("image-caption-captioned"),new v.MarkdownRenderChild(t)}function C(i,n){let e=i.querySelector("img"),{width:t,height:s}=n,r=t.toString(),o=s.toString();i.setAttribute("width",r),i.setAttribute("height",o),e.setAttribute("width",r),e.setAttribute("height",o)}var N=require("@codemirror/language");var q=11;function P(i,n){return n.doc.slice(i.at(0).from,i.at(-1).to).toString()}function H(i){let e=(i.type?i.type.props:i.props)[q];return e===void 0?[]:e.split(" ")}function m(i,n){return H(n).contains(i)}function T(i,n){let e=[i];for(;!n(e.at(-1),e);){let t=e.at(-1).node.nextSibling;if(!t)break;e.push(t)}return e}function F(i){return m("formatting-link-start",i)}function U(i){return m("formatting-link-end",i)}function W(i){return m("image-marker",i)}function j(i,n){let e="formatting-link-string";return n.map(r=>m(e,r)?1:0).reduce((r,o)=>r+o,0)==2}function B(i){let n="link-alias",e="image-alt-text";return m(n,i)||m(e,i)}function G(i){return m("hmd-internal-link",i)}function Y(i){return m("url",i)}var _=class{constructor(n){this.plugin=n}parse(n){let e=(0,N.syntaxTree)(n),t=[],s;return e.iterate({enter:r=>{let o;if(F(r))console.debug(r),o=T(r,U),s="internal";else if(W(r))o=T(r,j),s="external";else return!0;let a=this.parse_nodes_src(o,n),l=this.parse_nodes_caption(o,n);l||(l={text:void 0,size:void 0});let c={nodes:o,src:a,caption:l.text,size:l.size,embed_type:s};return t.push(c),!1}}),t}parse_nodes_src(n,e){let t;if(t=n.filter(G),t.length)return P(t,e).split("|").map(a=>a.trim())[0];if(t=n.filter(Y),!t.length)throw Error("Could not find source for nodes.");let s=P(t,e).trim();return s=s.slice(1,-1),s}parse_nodes_caption(n,e){let t=n.filter(B);if(!t.length)return null;let s=e.sliceDoc(t.at(0).from,t.at(-1).to),r=this.plugin.settings.delimeter;return E(s,r)}};var R=require("@codemirror/view"),b=class extends R.WidgetType{constructor(e,t){super();this.index=e,this.info=t}toDOM(e){let t=document.createElement("data");return t.addClass("image-caption-data"),t.setAttribute("data-image-caption-index",this.index.toString()),t}eq(e){return e.index===this.index&&e.info.embed_type===this.info.embed_type}};function J(i){return class{constructor(e){this.parser=new _(i),this.observers=[],this.image_info=this.parser.parse(e.state),this.decorations=this.mark_images(this.image_info),this.register_observers(e,this.image_info)}update(e){this.image_info=this.parser.parse(e.state),e.docChanged?(this.decorations=this.mark_images(this.image_info),this.register_observers(e.view,this.image_info)):e.viewportChanged&&this.register_observers(e.view,this.image_info)}destroy(){this.clear_observers()}mark_images(e){let t=[];for(let s=0;s<e.length;s++){let r=e[s],o=h.Decoration.widget({widget:new b(s,r),side:9999}),a=r.nodes.at(-1).to;t.push(o.range(a))}return h.Decoration.set(t)}register_observers(e,t){let{preview:s,source:r,reading:o}=this.parse_views(e.root);s&&this.register_preview_observers(s,t),r&&this.register_source_observers(r,t),o&&this.register_reading_observers(o,t)}parse_views(e){let t=e.querySelector(".markdown-source-view.is-live-preview"),s=e.querySelector(".markdown-source-view:not(.is-live-preview"),r=e.querySelector(".markdown-reading-view");return{preview:t,source:s,reading:r}}register_preview_observers(e,t){e.querySelectorAll(`.${d.caption_class}`).forEach(o=>o.remove()),e.querySelectorAll(".image-caption-data").forEach(o=>{let a=parseInt(o.getAttribute("data-image-caption-index")),l=this.image_info[a],c=l.embed_type;if(c==="internal"){let f=w(o,".internal-embed.image-embed.is-loaded",-1);if(!f){console.debug(`image container not found for mark ${a}`);return}if(l.caption){let V=I(f,l.caption),z=a+1;V.containerEl.setAttribute("data-image-caption-fignum",z.toString())}l.size&&C(f,l.size)}else if(c!=="external")throw new Error(`Invalid embed type ${c}.`)})}register_source_observers(e,t){}register_reading_observers(e,t){}clear_observers(){}}}function k(i){return[h.ViewPlugin.fromClass(J(i),{decorations:e=>e.decorations})]}var K={css:"",label:"",delimeter:[],htmlCaption:!1},u=class extends p.Plugin{onload(){return g(this,null,function*(){yield this.loadSettings();let e=k(this);this.registerEditorExtension(e),this.caption_observers=[],this.addStylesheet(),this.addSettingTab(new x(this.app,this))})}onunload(){this.stylesheet&&this.stylesheet.remove()}loadSettings(){return g(this,null,function*(){this.settings=Object.assign({},K,yield this.loadData())})}saveSettings(){return g(this,null,function*(){yield this.saveData(this.settings)})}addObserver(e){this.caption_observers.push(e)}removeObserver(e){e.disconnect();let t=this.caption_observers.indexOf(e);this.caption_observers.splice(t,1)}clearObservers(){for(let e of this.caption_observers)e.disconnect();this.caption_observers=[]}addStylesheet(){this.stylesheet=document.createElement("style"),this.stylesheet.setAttribute("type","text/css"),this.updateStylesheet(),document.head.append(this.stylesheet)}updateStylesheet(){let e=this.settings.css?`${u.caption_selector} { ${this.settings.css} }`:"",t=this.settings.label;if(t){let s=/(^|[^\\])#/g;t=t.replace(s,"$1' attr(data-image-caption-fignum) '"),t=t.replace("\\#","#"),t=`${u.caption_selector}::before { content: '${t} ' }`}this.stylesheet.innerText=`${e} ${t}`}removeCaptions(){document.querySelectorAll(u.caption_selector).forEach(t=>{t.remove()})}},d=u;d.caption_tag="figcaption",d.caption_class="obsidian-image-caption",d.caption_selector=`${u.caption_tag}.${u.caption_class}`;var x=class extends p.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),new p.Setting(e).setName("Label").setDesc("Prepend this text before each caption.").addText(s=>s.setPlaceholder("Label").setValue(this.plugin.settings.label).onChange(r=>g(this,null,function*(){this.plugin.settings.label=r.trim(),yield this.plugin.saveSettings(),this.plugin.updateStylesheet()}))),new p.Setting(e).setName("CSS").setDesc("Custom CSS styling for captions.").addTextArea(s=>s.setPlaceholder("Enter your CSS").setValue(this.plugin.settings.css).onChange(r=>g(this,null,function*(){this.plugin.settings.css=r.trim(),yield this.plugin.saveSettings(),this.plugin.updateStylesheet()})));let t=new p.Setting(e).setName("Delimeter").setDesc("Identify the caption by surrounding it with the delimeter. Start and end delimeters mays be specified by separation with a comma (,).").setTooltip("If no delimeter is provided the entire alt text is taken to be the caption. If a single delimeter is specified it must indicate the start and end of the caption. If two delimeters are specified, by separation with a comma, the caption is taken to be the text between the start and end delimeters.");t.addText(s=>s.setPlaceholder("Delimeter").setValue(this.plugin.settings.delimeter.join(", ")).onChange(r=>g(this,null,function*(){let o=r.split(",").map(a=>a.trim());if(o.length>2){t.controlEl.addClass("setting-error");return}if(o.length===2&&o.some(a=>!a)){t.controlEl.addClass("setting-error");return}o.length===1&&o[0]===""&&(o=[]),t.controlEl.removeClass("setting-error"),this.plugin.settings.delimeter=o,yield this.plugin.saveSettings()}))),new p.Setting(e).setName("Caption as HTML").setDesc("Insert caption text as HTML.").addToggle(s=>s.setValue(this.plugin.settings.htmlCaption).onChange(r=>g(this,null,function*(){this.plugin.settings.htmlCaption=r,yield this.plugin.saveSettings()})))}};
